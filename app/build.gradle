/*
 * Copyright 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import com.example.jetsnack.buildsrc.Libs
plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id("com.apollographql.apollo3").version("3.3.0")
    id 'com.google.gms.google-services'
    id 'kotlin-android-extensions'
}

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId 'com.example.jetsnack'
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName '1.0'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    signingConfigs {
        // We use a bundled debug keystore, to allow debug builds from CI to be upgradable
        debug {
            storeFile rootProject.file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled true
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }

        benchmark {
            initWith buildTypes.release
            signingConfig signingConfigs.debug
            matchingFallbacks = ['release']
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-benchmark-rules.pro'
            debuggable false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        compose true
        // Disable unused AGP features
        buildConfig false
        aidl false
        renderScript false
        resValues false
        shaders false
    }

    composeOptions {
        kotlinCompilerExtensionVersion Libs.AndroidX.Compose.version
    }
    packagingOptions {
        resources {
            excludes += ['/META-INF/AL2.0', '/META-INF/LGPL2.1']
        }
    }
    dataBinding {
        enabled = true
    }
    buildFeatures {
        viewBinding = true
        mlModelBinding true
    }
    aaptOptions {
        noCompress "tflite"
    }

}
repositories {
    maven { url 'https://dl.bintray.com/lisawray/maven' }
}
dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.6.21"

    implementation 'de.hdodenhof:circleimageview:3.1.0'

    implementation "com.xwray:groupie:2.9.0"
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation Libs.Kotlin.stdlib
    implementation Libs.Coroutines.android

    implementation Libs.Coroutines.core

    implementation Libs.AndroidX.coreKtx
    implementation Libs.AndroidX.Activity.activityCompose
    implementation Libs.AndroidX.Lifecycle.viewModelCompose
    implementation Libs.AndroidX.Navigation.navigationCompose
    implementation Libs.AndroidX.ConstraintLayout.constraintLayoutCompose

    implementation Libs.AndroidX.Compose.runtime
    implementation Libs.AndroidX.Compose.foundation
    implementation Libs.AndroidX.Compose.layout
    implementation Libs.AndroidX.Compose.ui
    implementation Libs.AndroidX.Compose.uiUtil
    implementation Libs.AndroidX.Compose.material
    implementation Libs.AndroidX.Compose.animation
    implementation Libs.AndroidX.Compose.iconsExtended
    implementation Libs.AndroidX.Compose.toolingPreview
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.databinding:viewbinding:7.2.1'
    implementation 'androidx.core:core-splashscreen:1.0.0'
    debugImplementation Libs.AndroidX.Compose.tooling
    implementation Libs.Accompanist.systemuicontroller
    implementation Libs.Accompanist.flowlayouts

    implementation Libs.Coil.coilCompose
    implementation 'com.google.android.gms:play-services-auth:19.0.0'
    implementation("com.apollographql.apollo3:apollo-runtime:3.3.0")
    implementation 'com.google.firebase:firebase-analytics-ktx'
    // Firebase SDK
    implementation platform('com.google.firebase:firebase-bom:26.6.0')
    implementation 'com.google.firebase:firebase-database-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'
    implementation 'com.google.firebase:firebase-storage:20.0.1'
    implementation 'com.google.firebase:firebase-auth-ktx'

    // Firebase UI Library
    implementation 'com.firebaseui:firebase-ui-auth:7.2.0'
    implementation 'com.firebaseui:firebase-ui-database:7.2.0'
    implementation 'androidx.constraintlayout:constraintlayout'
    implementation 'androidx.activity:activity:1.4.0'
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    androidTestImplementation Libs.JUnit.junit
    androidTestImplementation Libs.AndroidX.Test.core
    androidTestImplementation Libs.AndroidX.Test.runner
    androidTestImplementation Libs.AndroidX.Test.espressoCore
    androidTestImplementation Libs.AndroidX.Test.rules
    androidTestImplementation Libs.AndroidX.Test.Ext.junit
    androidTestImplementation Libs.Coroutines.test
    androidTestImplementation Libs.AndroidX.Compose.uiTest
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.6.21"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation("com.apollographql.apollo3:apollo-runtime:3.3.0")
    implementation("com.apollographql.apollo:apollo-coroutines-support:2.5.4")
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1'
    testImplementation("junit:junit:4.13.2")
    androidTestImplementation("androidx.test.ext:junit:1.1.3")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.4.0")

    implementation 'org.tensorflow:tensorflow-lite:2.5.0'
    implementation 'org.tensorflow:tensorflow-lite-support:0.1.0'
    implementation 'org.tensorflow:tensorflow-lite-metadata:0.1.0'
    implementation 'org.tensorflow:tensorflow-lite-gpu:2.3.0'
    implementation 'androidx.core:core-splashscreen:1.0.0-beta02'

    // CameraX
    implementation "androidx.camera:camera-camera2:1.0.1"
    implementation "androidx.camera:camera-lifecycle:1.0.1"
    implementation "androidx.camera:camera-view:1.0.0-alpha27"

    // Icons
    implementation "androidx.compose.material:material-icons-extended:1.0.1"

    // Coil
    implementation "io.coil-kt:coil-compose:1.4.0"
}
apollo {
    generateKotlinModels.set(true)
    packageName.set("com.example.rocketreserver")
}
